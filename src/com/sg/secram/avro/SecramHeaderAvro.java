/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.sg.secram.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SecramHeaderAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SecramHeaderAvro\",\"namespace\":\"com.sg.secram.avro\",\"fields\":[{\"name\":\"BAMHeader\",\"type\":\"bytes\"},{\"name\":\"unalignedRecords\",\"type\":\"bytes\"},{\"name\":\"firstPosition\",\"type\":\"long\"},{\"name\":\"lastPosition\",\"type\":\"long\"},{\"name\":\"positions\",\"type\":{\"type\":\"array\",\"items\":\"long\"}},{\"name\":\"index\",\"type\":{\"type\":\"array\",\"items\":\"long\"}},{\"name\":\"opeSalt\",\"type\":\"long\"},{\"name\":\"blockSalts\",\"type\":{\"type\":\"array\",\"items\":\"long\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.nio.ByteBuffer BAMHeader;
  @Deprecated public java.nio.ByteBuffer unalignedRecords;
  @Deprecated public long firstPosition;
  @Deprecated public long lastPosition;
  @Deprecated public java.util.List<java.lang.Long> positions;
  @Deprecated public java.util.List<java.lang.Long> index;
  @Deprecated public long opeSalt;
  @Deprecated public java.util.List<java.lang.Long> blockSalts;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SecramHeaderAvro() {}

  /**
   * All-args constructor.
   */
  public SecramHeaderAvro(java.nio.ByteBuffer BAMHeader, java.nio.ByteBuffer unalignedRecords, java.lang.Long firstPosition, java.lang.Long lastPosition, java.util.List<java.lang.Long> positions, java.util.List<java.lang.Long> index, java.lang.Long opeSalt, java.util.List<java.lang.Long> blockSalts) {
    this.BAMHeader = BAMHeader;
    this.unalignedRecords = unalignedRecords;
    this.firstPosition = firstPosition;
    this.lastPosition = lastPosition;
    this.positions = positions;
    this.index = index;
    this.opeSalt = opeSalt;
    this.blockSalts = blockSalts;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return BAMHeader;
    case 1: return unalignedRecords;
    case 2: return firstPosition;
    case 3: return lastPosition;
    case 4: return positions;
    case 5: return index;
    case 6: return opeSalt;
    case 7: return blockSalts;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: BAMHeader = (java.nio.ByteBuffer)value$; break;
    case 1: unalignedRecords = (java.nio.ByteBuffer)value$; break;
    case 2: firstPosition = (java.lang.Long)value$; break;
    case 3: lastPosition = (java.lang.Long)value$; break;
    case 4: positions = (java.util.List<java.lang.Long>)value$; break;
    case 5: index = (java.util.List<java.lang.Long>)value$; break;
    case 6: opeSalt = (java.lang.Long)value$; break;
    case 7: blockSalts = (java.util.List<java.lang.Long>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'BAMHeader' field.
   */
  public java.nio.ByteBuffer getBAMHeader() {
    return BAMHeader;
  }

  /**
   * Sets the value of the 'BAMHeader' field.
   * @param value the value to set.
   */
  public void setBAMHeader(java.nio.ByteBuffer value) {
    this.BAMHeader = value;
  }

  /**
   * Gets the value of the 'unalignedRecords' field.
   */
  public java.nio.ByteBuffer getUnalignedRecords() {
    return unalignedRecords;
  }

  /**
   * Sets the value of the 'unalignedRecords' field.
   * @param value the value to set.
   */
  public void setUnalignedRecords(java.nio.ByteBuffer value) {
    this.unalignedRecords = value;
  }

  /**
   * Gets the value of the 'firstPosition' field.
   */
  public java.lang.Long getFirstPosition() {
    return firstPosition;
  }

  /**
   * Sets the value of the 'firstPosition' field.
   * @param value the value to set.
   */
  public void setFirstPosition(java.lang.Long value) {
    this.firstPosition = value;
  }

  /**
   * Gets the value of the 'lastPosition' field.
   */
  public java.lang.Long getLastPosition() {
    return lastPosition;
  }

  /**
   * Sets the value of the 'lastPosition' field.
   * @param value the value to set.
   */
  public void setLastPosition(java.lang.Long value) {
    this.lastPosition = value;
  }

  /**
   * Gets the value of the 'positions' field.
   */
  public java.util.List<java.lang.Long> getPositions() {
    return positions;
  }

  /**
   * Sets the value of the 'positions' field.
   * @param value the value to set.
   */
  public void setPositions(java.util.List<java.lang.Long> value) {
    this.positions = value;
  }

  /**
   * Gets the value of the 'index' field.
   */
  public java.util.List<java.lang.Long> getIndex() {
    return index;
  }

  /**
   * Sets the value of the 'index' field.
   * @param value the value to set.
   */
  public void setIndex(java.util.List<java.lang.Long> value) {
    this.index = value;
  }

  /**
   * Gets the value of the 'opeSalt' field.
   */
  public java.lang.Long getOpeSalt() {
    return opeSalt;
  }

  /**
   * Sets the value of the 'opeSalt' field.
   * @param value the value to set.
   */
  public void setOpeSalt(java.lang.Long value) {
    this.opeSalt = value;
  }

  /**
   * Gets the value of the 'blockSalts' field.
   */
  public java.util.List<java.lang.Long> getBlockSalts() {
    return blockSalts;
  }

  /**
   * Sets the value of the 'blockSalts' field.
   * @param value the value to set.
   */
  public void setBlockSalts(java.util.List<java.lang.Long> value) {
    this.blockSalts = value;
  }

  /** Creates a new SecramHeaderAvro RecordBuilder */
  public static com.sg.secram.avro.SecramHeaderAvro.Builder newBuilder() {
    return new com.sg.secram.avro.SecramHeaderAvro.Builder();
  }
  
  /** Creates a new SecramHeaderAvro RecordBuilder by copying an existing Builder */
  public static com.sg.secram.avro.SecramHeaderAvro.Builder newBuilder(com.sg.secram.avro.SecramHeaderAvro.Builder other) {
    return new com.sg.secram.avro.SecramHeaderAvro.Builder(other);
  }
  
  /** Creates a new SecramHeaderAvro RecordBuilder by copying an existing SecramHeaderAvro instance */
  public static com.sg.secram.avro.SecramHeaderAvro.Builder newBuilder(com.sg.secram.avro.SecramHeaderAvro other) {
    return new com.sg.secram.avro.SecramHeaderAvro.Builder(other);
  }
  
  /**
   * RecordBuilder for SecramHeaderAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SecramHeaderAvro>
    implements org.apache.avro.data.RecordBuilder<SecramHeaderAvro> {

    private java.nio.ByteBuffer BAMHeader;
    private java.nio.ByteBuffer unalignedRecords;
    private long firstPosition;
    private long lastPosition;
    private java.util.List<java.lang.Long> positions;
    private java.util.List<java.lang.Long> index;
    private long opeSalt;
    private java.util.List<java.lang.Long> blockSalts;

    /** Creates a new Builder */
    private Builder() {
      super(com.sg.secram.avro.SecramHeaderAvro.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.sg.secram.avro.SecramHeaderAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.BAMHeader)) {
        this.BAMHeader = data().deepCopy(fields()[0].schema(), other.BAMHeader);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.unalignedRecords)) {
        this.unalignedRecords = data().deepCopy(fields()[1].schema(), other.unalignedRecords);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.firstPosition)) {
        this.firstPosition = data().deepCopy(fields()[2].schema(), other.firstPosition);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lastPosition)) {
        this.lastPosition = data().deepCopy(fields()[3].schema(), other.lastPosition);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.positions)) {
        this.positions = data().deepCopy(fields()[4].schema(), other.positions);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.index)) {
        this.index = data().deepCopy(fields()[5].schema(), other.index);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.opeSalt)) {
        this.opeSalt = data().deepCopy(fields()[6].schema(), other.opeSalt);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.blockSalts)) {
        this.blockSalts = data().deepCopy(fields()[7].schema(), other.blockSalts);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SecramHeaderAvro instance */
    private Builder(com.sg.secram.avro.SecramHeaderAvro other) {
            super(com.sg.secram.avro.SecramHeaderAvro.SCHEMA$);
      if (isValidValue(fields()[0], other.BAMHeader)) {
        this.BAMHeader = data().deepCopy(fields()[0].schema(), other.BAMHeader);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.unalignedRecords)) {
        this.unalignedRecords = data().deepCopy(fields()[1].schema(), other.unalignedRecords);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.firstPosition)) {
        this.firstPosition = data().deepCopy(fields()[2].schema(), other.firstPosition);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lastPosition)) {
        this.lastPosition = data().deepCopy(fields()[3].schema(), other.lastPosition);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.positions)) {
        this.positions = data().deepCopy(fields()[4].schema(), other.positions);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.index)) {
        this.index = data().deepCopy(fields()[5].schema(), other.index);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.opeSalt)) {
        this.opeSalt = data().deepCopy(fields()[6].schema(), other.opeSalt);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.blockSalts)) {
        this.blockSalts = data().deepCopy(fields()[7].schema(), other.blockSalts);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'BAMHeader' field */
    public java.nio.ByteBuffer getBAMHeader() {
      return BAMHeader;
    }
    
    /** Sets the value of the 'BAMHeader' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder setBAMHeader(java.nio.ByteBuffer value) {
      validate(fields()[0], value);
      this.BAMHeader = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'BAMHeader' field has been set */
    public boolean hasBAMHeader() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'BAMHeader' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder clearBAMHeader() {
      BAMHeader = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'unalignedRecords' field */
    public java.nio.ByteBuffer getUnalignedRecords() {
      return unalignedRecords;
    }
    
    /** Sets the value of the 'unalignedRecords' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder setUnalignedRecords(java.nio.ByteBuffer value) {
      validate(fields()[1], value);
      this.unalignedRecords = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'unalignedRecords' field has been set */
    public boolean hasUnalignedRecords() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'unalignedRecords' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder clearUnalignedRecords() {
      unalignedRecords = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'firstPosition' field */
    public java.lang.Long getFirstPosition() {
      return firstPosition;
    }
    
    /** Sets the value of the 'firstPosition' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder setFirstPosition(long value) {
      validate(fields()[2], value);
      this.firstPosition = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'firstPosition' field has been set */
    public boolean hasFirstPosition() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'firstPosition' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder clearFirstPosition() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'lastPosition' field */
    public java.lang.Long getLastPosition() {
      return lastPosition;
    }
    
    /** Sets the value of the 'lastPosition' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder setLastPosition(long value) {
      validate(fields()[3], value);
      this.lastPosition = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'lastPosition' field has been set */
    public boolean hasLastPosition() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'lastPosition' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder clearLastPosition() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'positions' field */
    public java.util.List<java.lang.Long> getPositions() {
      return positions;
    }
    
    /** Sets the value of the 'positions' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder setPositions(java.util.List<java.lang.Long> value) {
      validate(fields()[4], value);
      this.positions = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'positions' field has been set */
    public boolean hasPositions() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'positions' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder clearPositions() {
      positions = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'index' field */
    public java.util.List<java.lang.Long> getIndex() {
      return index;
    }
    
    /** Sets the value of the 'index' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder setIndex(java.util.List<java.lang.Long> value) {
      validate(fields()[5], value);
      this.index = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'index' field has been set */
    public boolean hasIndex() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'index' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder clearIndex() {
      index = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'opeSalt' field */
    public java.lang.Long getOpeSalt() {
      return opeSalt;
    }
    
    /** Sets the value of the 'opeSalt' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder setOpeSalt(long value) {
      validate(fields()[6], value);
      this.opeSalt = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'opeSalt' field has been set */
    public boolean hasOpeSalt() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'opeSalt' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder clearOpeSalt() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'blockSalts' field */
    public java.util.List<java.lang.Long> getBlockSalts() {
      return blockSalts;
    }
    
    /** Sets the value of the 'blockSalts' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder setBlockSalts(java.util.List<java.lang.Long> value) {
      validate(fields()[7], value);
      this.blockSalts = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'blockSalts' field has been set */
    public boolean hasBlockSalts() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'blockSalts' field */
    public com.sg.secram.avro.SecramHeaderAvro.Builder clearBlockSalts() {
      blockSalts = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public SecramHeaderAvro build() {
      try {
        SecramHeaderAvro record = new SecramHeaderAvro();
        record.BAMHeader = fieldSetFlags()[0] ? this.BAMHeader : (java.nio.ByteBuffer) defaultValue(fields()[0]);
        record.unalignedRecords = fieldSetFlags()[1] ? this.unalignedRecords : (java.nio.ByteBuffer) defaultValue(fields()[1]);
        record.firstPosition = fieldSetFlags()[2] ? this.firstPosition : (java.lang.Long) defaultValue(fields()[2]);
        record.lastPosition = fieldSetFlags()[3] ? this.lastPosition : (java.lang.Long) defaultValue(fields()[3]);
        record.positions = fieldSetFlags()[4] ? this.positions : (java.util.List<java.lang.Long>) defaultValue(fields()[4]);
        record.index = fieldSetFlags()[5] ? this.index : (java.util.List<java.lang.Long>) defaultValue(fields()[5]);
        record.opeSalt = fieldSetFlags()[6] ? this.opeSalt : (java.lang.Long) defaultValue(fields()[6]);
        record.blockSalts = fieldSetFlags()[7] ? this.blockSalts : (java.util.List<java.lang.Long>) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
